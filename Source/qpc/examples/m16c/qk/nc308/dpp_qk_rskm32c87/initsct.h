/***********************************************************************/
/*                                                                     */
/*  FILE        :initsct.h                                             */
/*  DATE        :Tue, Oct 21, 2008                                     */
/*  DESCRIPTION :define the macro for initialization of sections.      */
/*  CPU GROUP   :87                                                    */
/*                                                                     */
/*  This file is generated by Renesas Project Generator (Ver.4.8).     */
/*                                                                     */
/***********************************************************************/

/***********************************************************
 *  Startup for M32C/9X
 *  Copyright(c) 2004 Renesas Technology Corp.
 *  And Renesas Solutions Corp.,All Rights Reserved.
 *
 *  initsct.h
 *
 *  clear for bss section
 *  transfer initialized data to data section
 *
 *  note: Do not modify
 *
 * $Date: 2005/10/24 11:57:29 $
 * $Revision: 1.7 $
 **********************************************************/

#pragma section program interrupt
#define    sclear(X,Y)    _asm("    .initsct "X","Y"\n"\
            "    mov.b    #00H,R0L\n"\
            "    mov.l    #(topof    "X") ,A1\n"\
            "    mov.w    #sizeof    "X",R3\n"\
            "    sstr.b");

#define sclear_f(X,Y)    _asm("    .initsct "X","Y"\n"\
            "    push.w    #(sizeof "X")>>16\n"\
            "    push.w    #(sizeof "X")&0ffffH\n"\
            "    pusha    "X"\n"\
            "    .stk    8\n"\
            "    .glb    _bzero\n"\
            "    .call    _bzero,G\n"\
            "    jsr.a    _bzero");


#define scopy(X,Y)    _asm("    .initsct "X","Y"\n"\
            "    .initsct "X"I,rom"Y"\n"\
            "    mov.l    #(topof "X"I),A0\n"\
            "    mov.l    #(topof "X"),A1\n"\
            "    mov.w    #sizeof    "X",R3\n"\
            "    smovf.b");

#define    scopy_f(X,Y)    _asm("    .initsct "X","Y"\n"\
            "    .initsct "X"I,rom"Y"\n"\
            "    push.w    #(sizeof "X") >> 16\n"\
            "    push.w    #(sizeof "X") & 0ffffH\n"\
            "    pusha    "X"\n"\
            "    pusha    "X"I\n"\
            "    .stk    12\n"\
            "    .glb    _bcopy\n"\
            "    .call    _bcopy,G\n"\
            "    jsr.a    _bcopy");

