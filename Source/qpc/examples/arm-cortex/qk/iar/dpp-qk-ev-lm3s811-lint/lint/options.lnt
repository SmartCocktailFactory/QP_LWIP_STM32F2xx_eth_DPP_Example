//////////////////////////////////////////////////////////////////////////////
// Product: PC-Lint 9.x option file for linting QP/C applications
// Last Updated for Version: 4.5.01
// Date of the Last Update:  Jun 13, 2012
//
//                    Q u a n t u m     L e a P s
//                    ---------------------------
//                    innovating embedded systems
//
// Copyright (C) 2002-2012 Quantum Leaps, LLC. All rights reserved.
//
// This software may be distributed and modified under the terms of the GNU
// General Public License version 2 (GPL) as published by the Free Software
// Foundation and appearing in the file GPL.TXT included in the packaging of
// this file. Please note that GPL Section 2[b] requires that all works based
// on this software must also be made publicly available under the terms of
// the GPL ("Copyleft").
//
// Alternatively, this software may be distributed and modified under the
// terms of Quantum Leaps commercial licenses, which expressly supersede
// the GPL and are specifically designed for licensees interested in
// retaining the proprietary status of their code.
//
// Contact information:
// Quantum Leaps Web site:  http://www.quantum-leaps.com
// e-mail:                  info@quantum-leaps.com
//////////////////////////////////////////////////////////////////////////////

// the location of the IAR ARM includes (need to adjust!!!)
-iC:\tools\IAR\ARM_KS_6.40\arm\inc\c

// the location of the QTools lint directory (need to adjust!!!)
-iC:\tools\qtools\lint

-i%QPC%\include                   // QP/C includes
-i%QPC%\ports\arm-cortex\qk\iar   // QP/C port includes
-i..\cmsis                    // CMSIS directory
-i..\display                  // display driver

co-iar-arm.lnt                // IAR ARM compiler
au-misra2.lnt                 // MISRA-C:2004 rules
au-ds.lnt                     // Dan Saks recommendations
lib-qpc.lnt                   // QP/C options
//-strong(AXJ)                  // Strong type checking

// library headers
-wlib(1)                      // ignore warnings from library headers
+libclass(angle)              // consider only <...> headers as library
+libdir(..\cmsis)
+libdir(..\display)
//-vf                           // print names of all header & source files

-emacro(923, UINT2PTR_CAST)   // cast from unsigned int to pointer
-emacro(946, PHILO_ID)        // MISRA04-17.2(req), subtraction of pointers
-emacro(947, PHILO_ID)        // MISRA04-17.2(req), subtraction of pointers
-emacro(960, PHILO_ID)        // MISRA04-17.4(req), pointer arithmetic
-estring(961,                 // MISRA04-19.7(adv) Function-like macro
 PHILO_ID,
 RIGHT,
 LEFT)
-emacro(717,                  // do ... while(0);
 QK_ISR_ENTRY,
 QK_ISR_EXIT)

// not referenced symbols
-e714                         // symbol '...' not referenced
-e755                         // global macro '...' not referenced
-e756                         // global typedef '...' not referenced
-e757                         // global declarator '...' not referenced
-e768                         // struct member '...' not referenced
